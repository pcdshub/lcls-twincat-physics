<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.18">
  <POU Name="FB_Lens_Test" Id="{9add33cb-e8c3-4b34-834a-827d76bb686e}" SpecialFunc="None">
    <Declaration><![CDATA[
FUNCTION_BLOCK FB_Lens_Test EXTENDS TcUnit.FB_TestSuite
VAR
    nTestID : INT;
    fbLens : FB_Lens;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
nTestID := 0;


]]></ST>
    </Implementation>
    <Method Name="TestInvalidDeltaExpectError0FocalLength" Id="{b8564aa5-bff1-429e-860c-b508ebb73485}">
      <Declaration><![CDATA[
METHOD TestInvalidDeltaExpectError0FocalLength
VAR_INPUT
    fDelta : LREAL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
TEST(CONCAT('TestInvalidDeltaExpectError0FocalLength ID: ',
    INT_TO_STRING(nTestID))
);

fbCalcFocalLengthSingleLens(
    fDelta := fDelta,
    fRadius := 0.005,
    fFocalLength =>,
    bError =>,
    sErrorMsg =>
);

AssertTrue(
    Condition := fbCalcFocalLengthSingleLens.bError,
    Message := 'Expected bError bit to be true but it was false.'
);

AssertTrue(
    Condition := fbCalcFocalLengthSingleLens.sErrorMsg <> '',
    Message := 'Expected sErrorMsg to not be empty.'
);

AssertEquals_LREAL(
    Expected := 0,
    Actual := fbCalcFocalLengthSingleLens.fFocalLength,
    Delta := 0,
    Message := 'Calculated focal length should be 0 when an error is detected.'
);

TEST_FINISHED();

nTestID := nTestID + 1;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="TestValidInputsExpectNoErrorAccurateFocalLength" Id="{f49502d8-148a-4213-9cbf-07c6f3490873}">
      <Declaration><![CDATA[
METHOD TestValidInputsExpectNoErrorAccurateFocalLength
VAR_INPUT
    fDelta : LREAL;
    fRadius : LREAL;

    fExpected : LREAL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
TEST(CONCAT('TestValidInputsExpectNoErrorAccurateFocalLength ID: ',
    INT_TO_STRING(nTestID))
);

fbCalcFocalLengthSingleLens(
    fDelta := fDelta,
    fRadius := fRadius,
    fFocalLength =>,
    bError =>,
    sErrorMsg =>
);

AssertFalse(
    Condition := fbCalcFocalLengthSingleLens.bError,
    Message := 'Expected bError bit to be false but it was true.'
);

AssertFalse(
    Condition := fbCalcFocalLengthSingleLens.sErrorMsg <> '',
    Message := 'Expected sErrorMsg to be empty.'
);

AssertEquals_LREAL(
    Expected := fExpected,
    Actual := fbCalcFocalLengthSingleLens.fFocalLength,
    Delta := ABS(0.001 * fExpected),
    Message := 'Calculated focal length did not calculate close enough to the expected value.'
);

TEST_FINISHED();

nTestID := nTestID + 1;
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>