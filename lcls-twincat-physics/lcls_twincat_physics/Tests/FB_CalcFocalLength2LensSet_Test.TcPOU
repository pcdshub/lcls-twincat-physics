<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_CalcFocalLength2LensSet_Test" Id="{13bd12fa-fde2-47a3-9090-578faeebf965}" SpecialFunc="None">
    <Declaration><![CDATA[
FUNCTION_BLOCK FB_CalcFocalLength2LensSet_Test EXTENDS FB_TestSuiteExtended
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
TestIntegrationValidInputsExpectNoErrorCorrectFocalLength();

TestInvalidCalcFocalLengthExpectError0FocalLength();

TestInvalidLensSetCompounderExpectError0FocalLength();
]]></ST>
    </Implementation>
    <Method Name="AssertError0Result" Id="{680c3f97-1e1b-4b2b-b5f5-3f9b5fc8d262}">
      <Declaration><![CDATA[
METHOD PRIVATE AssertError0Result
VAR_INPUT
    iFallible : I_Fallible;
    fResult : LREAL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
AssertTrue(
    Condition := iFallible.GetError(),
    Message := 'Expected bError bit to be true but it was false.'
);

AssertTrue(
    Condition := iFallible.GetErrorMsg() <> '',
    Message := 'Expected sErrorMsg to not be empty.'
);

AssertEquals_LREAL(
    Expected := 0.0,
    Actual := fResult,
    Delta := 0.0,
    Message := 'Result should be 0 when an error is detected.'
);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="AssertNoErrorCorrectResult" Id="{d034c36f-1fa1-4a01-9671-c364252e132a}">
      <Declaration><![CDATA[
METHOD PRIVATE AssertNoErrorCorrectResult : REFERENCE TO FB_Test
VAR_INPUT
    iFallible : I_Fallible;
    fExpected : LREAL;
    fResult : LREAL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
AssertFalse(
    Condition := iFallible.GetError(),
    Message := 'Expected bError bit to be false but it was true.'
);

AssertFalse(
    Condition := iFallible.GetErrorMsg() <> '',
    Message := 'Expected sErrorMsg to be empty.'
);

AssertEquals_LREAL(
    Expected := fExpected,
    Actual := fResult,
    Delta := ABS(0.001 * fExpected),
    Message := 'Calculated focal length did not calculate close enough to the expected value.'
);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="TestIntegrationValidInputsExpectNoErrorCorrectFocalLength" Id="{058b9c4c-0c99-401f-a347-eb30a5845d9a}">
      <Declaration><![CDATA[
METHOD PRIVATE TestIntegrationValidInputsExpectNoErrorCorrectFocalLength
VAR
    fbSourceDistanceMock : FB_QuantityLREALPublicMock;
    fbDistanceBetweenMock : FB_QuantityLREALPublicMock;
    fbRadius : FB_QuantityLREALPublicMock;
    fbExpected : FB_QuantityLREALPublicMock;
    fbLensSetUpstreamMock : FB_LensSetMock;
    fbLensSetDownstreamMock : FB_LensSetMock;
    fbConvertUnitsLREALMock : FB_ConvertUnitsLREALMock;
    fbDeltaMock : FB_QuantityLREALPublicMock;
    fbCalcXRayDeltaMock : FB_CalcXRayDeltaMock;

    // Subject under test
    fbCalcFocalLengthSingleLens : FB_CalcFocalLengthSingleLens(
        ConvertUnits := fbConvertUnitsLREALMock,
        CalcXRayDelta := fbCalcXRayDeltaMock,
    );
    fbLensCompounder : FB_LensCompounder(ConvertUnits := fbConvertUnitsLREALMock);
    fbCalcFocalLengthLensSet : FB_CalcFocalLengthLensSet(
        ConvertUnits := fbConvertUnitsLREALMock,
        CalcFocalLengthSingleLens := fbCalcFocalLengthSingleLens,
        LensCompounder := fbLensCompounder
    );
    fbCalcImageDistance : FB_CalcImageDistance(ConvertUnits := fbConvertUnitsLREALMock);
    fbLensSetCompounder : FB_LensSetCompounder(
        ConvertUnits := fbConvertUnitsLREALMock,
        CalcImageDistance := fbCalcImageDistance
    );
    fbCalcFocalLength2LensSets : FB_CalcFocalLength2LensSets(
        iConvertUnits := fbConvertUnitsLREALMock,
        iCalcFocalLengthLensSet := fbCalcFocalLengthLensSet,
        iLensSetCompounder := fbLensSetCompounder
    );
    fbResult : FB_QuantityLREALPublic(Units := 'm');
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
TEST('TestValidInputsExpectNoErrorCorrectFocalLength_0');

// Test Fixture

fbLensSetDownstreamMock.SetValid();
fbLensSetUpstreamMock.SetValid();

fbDeltaMock.Val := 6.0441158254508544e-05;
fbCalcXRayDeltaMock.SetResult(Result := fbDeltaMock);

fbLensSetDownstreamMock.NumLenses := 1;

fbLensSetDownstreamMock.SetMultiplierOf(LensNum := 1, Multiplier := 1);
fbRadius.Val := 0.008758404439321937;
fbLensSetDownstreamMock.SetRadiusOf(LensNum := 1, Radius := fbRadius);
fbLensSetDownstreamMock.SetMaterialNameOf(LensNum := 1, MaterialFormula := 'Be');

fbLensSetUpstreamMock.NumLenses := 3;

fbLensSetUpstreamMock.SetMultiplierOf(LensNum := 1, Multiplier := 3);
fbRadius.Val := 0.04564963693236199;
fbLensSetUpstreamMock.SetRadiusOf(LensNum := 1, Radius := fbRadius);
fbLensSetUpstreamMock.SetMaterialNameOf(LensNum := 1, MaterialFormula := 'Be');

fbLensSetUpstreamMock.SetMultiplierOf(LensNum := 2, Multiplier := 3);
fbRadius.Val := 0.0434792141927702;
fbLensSetUpstreamMock.SetRadiusOf(LensNum := 2, Radius := fbRadius);
fbLensSetUpstreamMock.SetMaterialNameOf(LensNum := 2, MaterialFormula := 'Be');

fbLensSetUpstreamMock.SetMultiplierOf(LensNum := 3, Multiplier := 1);
fbRadius.Val := 0.03551174514144821;
fbLensSetUpstreamMock.SetRadiusOf(LensNum := 3, Radius := fbRadius);
fbLensSetUpstreamMock.SetMaterialNameOf(LensNum := 3, MaterialFormula := 'Be');

// prefocal_length := 53.71241024643325;
// virt_source := 2.485481731314465;
fbExpected.Val := -2.5737731761392064;
fbExpected.Units := 'm';

fbSourceDistanceMock.Val := 989.7550841371591;
fbSourceDistanceMock.Units := 'm';
fbDistanceBetweenMock.Val := 56.197891977747716;
fbDistanceBetweenMock.Units := 'm';

fbCalcFocalLength2LensSets.Calculate(
    SourceDistance := fbSourceDistanceMock,
    DistanceBetween := fbDistanceBetweenMock,
    LensSetUpstream := fbLensSetUpstreamMock,
    LensSetDownstream := fbLensSetDownstreamMock,
    FocalLength := fbResult
);

AssertNoError(iFallible := fbCalcFocalLength2LensSets);

AssertNoErrorExpectedQuantityLREAL(
    iExpected := fbExpected,
    iActual := fbResult,
    fDelta := ABS(0.001 * fbExpected.Val)
);

TEST_FINISHED();

TEST('TestValidInputsExpectNoErrorCorrectFocalLength_1');

// Test Fixture

fbLensSetDownstreamMock.SetValid();
fbLensSetUpstreamMock.SetValid();

fbDeltaMock.Val := 6.798746561819707e-06;
fbCalcXRayDeltaMock.SetResult(Result := fbDeltaMock);

fbLensSetDownstreamMock.NumLenses := 4;

fbLensSetDownstreamMock.SetMultiplierOf(LensNum := 1, Multiplier := 3);
fbRadius.Val := 0.045467462906513025;
fbLensSetDownstreamMock.SetRadiusOf(LensNum := 1, Radius := fbRadius);
fbLensSetDownstreamMock.SetMaterialNameOf(LensNum := 1, MaterialFormula := 'Be');

fbLensSetDownstreamMock.SetMultiplierOf(LensNum := 2, Multiplier := 1);
fbRadius.Val := 0.011057596187657509;
fbLensSetDownstreamMock.SetRadiusOf(LensNum := 2, Radius := fbRadius);
fbLensSetDownstreamMock.SetMaterialNameOf(LensNum := 2, MaterialFormula := 'Be');

fbLensSetDownstreamMock.SetMultiplierOf(LensNum := 3, Multiplier := 4);
fbRadius.Val := 0.042137819649718904;
fbLensSetDownstreamMock.SetRadiusOf(LensNum := 3, Radius := fbRadius);
fbLensSetDownstreamMock.SetMaterialNameOf(LensNum := 3, MaterialFormula := 'Be');

fbLensSetDownstreamMock.SetMultiplierOf(LensNum := 4, Multiplier := 2);
fbRadius.Val := 0.04303966634314013;
fbLensSetDownstreamMock.SetRadiusOf(LensNum := 4, Radius := fbRadius);
fbLensSetDownstreamMock.SetMaterialNameOf(LensNum := 4, MaterialFormula := 'Be');

fbLensSetUpstreamMock.NumLenses := 5;

fbLensSetUpstreamMock.SetMultiplierOf(LensNum := 1, Multiplier := 3);
fbRadius.Val := 0.027269727658069294;
fbLensSetUpstreamMock.SetRadiusOf(LensNum := 1, Radius := fbRadius);
fbLensSetUpstreamMock.SetMaterialNameOf(LensNum := 1, MaterialFormula := 'Be');

fbLensSetUpstreamMock.SetMultiplierOf(LensNum := 2, Multiplier := 1);
fbRadius.Val := 0.02122600142646262;
fbLensSetUpstreamMock.SetRadiusOf(LensNum := 2, Radius := fbRadius);
fbLensSetUpstreamMock.SetMaterialNameOf(LensNum := 2, MaterialFormula := 'Be');

fbLensSetUpstreamMock.SetMultiplierOf(LensNum := 3, Multiplier := 1);
fbRadius.Val := 0.031932618340668205;
fbLensSetUpstreamMock.SetRadiusOf(LensNum := 3, Radius := fbRadius);
fbLensSetUpstreamMock.SetMaterialNameOf(LensNum := 3, MaterialFormula := 'Be');

fbLensSetUpstreamMock.SetMultiplierOf(LensNum := 4, Multiplier := 3);
fbRadius.Val := 0.0066814908143165985;
fbLensSetUpstreamMock.SetRadiusOf(LensNum := 4, Radius := fbRadius);
fbLensSetUpstreamMock.SetMaterialNameOf(LensNum := 4, MaterialFormula := 'Be');

fbLensSetUpstreamMock.SetMultiplierOf(LensNum := 5, Multiplier := 4);
fbRadius.Val := 0.008090623378848473;
fbLensSetUpstreamMock.SetRadiusOf(LensNum := 5, Radius := fbRadius);
fbLensSetUpstreamMock.SetMaterialNameOf(LensNum := 5, MaterialFormula := 'Be');

// prefocal_length := 77.23057693002637;
// virt_source := -16.516911531056003;
fbExpected.Val := 15.481432539739234;
fbExpected.Units := 'm';

fbSourceDistanceMock.Val := 470.2203254437987;
fbSourceDistanceMock.Units := 'm';
fbDistanceBetweenMock.Val := 60.71366539897037;
fbDistanceBetweenMock.Units := 'm';

fbCalcFocalLength2LensSets.Calculate(
    SourceDistance := fbSourceDistanceMock,
    DistanceBetween := fbDistanceBetweenMock,
    LensSetUpstream := fbLensSetUpstreamMock,
    LensSetDownstream := fbLensSetDownstreamMock,
    FocalLength := fbResult
);

AssertNoError(iFallible := fbCalcFocalLength2LensSets);

AssertNoErrorExpectedQuantityLREAL(
    iExpected := fbExpected,
    iActual := fbResult,
    fDelta := ABS(0.001 * fbExpected.Val)
);

TEST_FINISHED();

TEST('TestValidInputsExpectNoErrorCorrectFocalLength_2');

// Test Fixture

fbLensSetDownstreamMock.SetValid();
fbLensSetUpstreamMock.SetValid();

fbDeltaMock.Val := 9.320670529762274e-06;
fbCalcXRayDeltaMock.SetResult(Result := fbDeltaMock);

fbLensSetDownstreamMock.NumLenses := 2;

fbLensSetDownstreamMock.SetMultiplierOf(LensNum := 1, Multiplier := 4);
fbRadius.Val := 0.04715774510628246;
fbLensSetDownstreamMock.SetRadiusOf(LensNum := 1, Radius := fbRadius);
fbLensSetDownstreamMock.SetMaterialNameOf(LensNum := 1, MaterialFormula := 'Be');

fbLensSetDownstreamMock.SetMultiplierOf(LensNum := 2, Multiplier := 2);
fbRadius.Val := 0.010542222171266493;
fbLensSetDownstreamMock.SetRadiusOf(LensNum := 2, Radius := fbRadius);
fbLensSetDownstreamMock.SetMaterialNameOf(LensNum := 2, MaterialFormula := 'Be');

fbLensSetUpstreamMock.NumLenses := 1;

fbLensSetUpstreamMock.SetMultiplierOf(LensNum := 1, Multiplier := 4);
fbRadius.Val := 0.0043941001848314095;
fbLensSetUpstreamMock.SetRadiusOf(LensNum := 1, Radius := fbRadius);
fbLensSetUpstreamMock.SetMaterialNameOf(LensNum := 1, MaterialFormula := 'Be');

// prefocal_length := 64.82611814473422;
// virt_source := -6.111534394645268;
fbExpected.Val := 5.926181193447012;
fbExpected.Units := 'm';

fbSourceDistanceMock.Val := 706.5733937623961;
fbSourceDistanceMock.Units := 'm';
fbDistanceBetweenMock.Val := 58.714583750088956;
fbDistanceBetweenMock.Units := 'm';

fbCalcFocalLength2LensSets.Calculate(
    SourceDistance := fbSourceDistanceMock,
    DistanceBetween := fbDistanceBetweenMock,
    LensSetUpstream := fbLensSetUpstreamMock,
    LensSetDownstream := fbLensSetDownstreamMock,
    FocalLength := fbResult
);

AssertNoError(iFallible := fbCalcFocalLength2LensSets);

AssertNoErrorExpectedQuantityLREAL(
    iExpected := fbExpected,
    iActual := fbResult,
    fDelta := ABS(0.001 * fbExpected.Val)
);

TEST_FINISHED();

TEST('TestValidInputsExpectNoErrorCorrectFocalLength_3');

// Test Fixture

fbLensSetDownstreamMock.SetValid();
fbLensSetUpstreamMock.SetValid();

fbDeltaMock.Val := 1.888487732152811e-05;
fbCalcXRayDeltaMock.SetResult(Result := fbDeltaMock);

fbLensSetDownstreamMock.NumLenses := 4;

fbLensSetDownstreamMock.SetMultiplierOf(LensNum := 1, Multiplier := 1);
fbRadius.Val := 0.024793400698635937;
fbLensSetDownstreamMock.SetRadiusOf(LensNum := 1, Radius := fbRadius);
fbLensSetDownstreamMock.SetMaterialNameOf(LensNum := 1, MaterialFormula := 'Be');

fbLensSetDownstreamMock.SetMultiplierOf(LensNum := 2, Multiplier := 4);
fbRadius.Val := 0.016789701709457;
fbLensSetDownstreamMock.SetRadiusOf(LensNum := 2, Radius := fbRadius);
fbLensSetDownstreamMock.SetMaterialNameOf(LensNum := 2, MaterialFormula := 'Be');

fbLensSetDownstreamMock.SetMultiplierOf(LensNum := 3, Multiplier := 3);
fbRadius.Val := 0.012117311767807176;
fbLensSetDownstreamMock.SetRadiusOf(LensNum := 3, Radius := fbRadius);
fbLensSetDownstreamMock.SetMaterialNameOf(LensNum := 3, MaterialFormula := 'Be');

fbLensSetDownstreamMock.SetMultiplierOf(LensNum := 4, Multiplier := 3);
fbRadius.Val := 0.048586835851719794;
fbLensSetDownstreamMock.SetRadiusOf(LensNum := 4, Radius := fbRadius);
fbLensSetDownstreamMock.SetMaterialNameOf(LensNum := 4, MaterialFormula := 'Be');

fbLensSetUpstreamMock.NumLenses := 1;

fbLensSetUpstreamMock.SetMultiplierOf(LensNum := 1, Multiplier := 3);
fbRadius.Val := 0.008285752294191066;
fbLensSetUpstreamMock.SetRadiusOf(LensNum := 1, Radius := fbRadius);
fbLensSetUpstreamMock.SetMaterialNameOf(LensNum := 1, MaterialFormula := 'Be');

// prefocal_length := 79.29313443421619;
// virt_source := -63.22543209177478;
fbExpected.Val := 26.301091713530464;
fbExpected.Units := 'm';

fbSourceDistanceMock.Val := 956.1285578255058;
fbSourceDistanceMock.Units := 'm';
fbDistanceBetweenMock.Val := 16.067702342441407;
fbDistanceBetweenMock.Units := 'm';

fbCalcFocalLength2LensSets.Calculate(
    SourceDistance := fbSourceDistanceMock,
    DistanceBetween := fbDistanceBetweenMock,
    LensSetUpstream := fbLensSetUpstreamMock,
    LensSetDownstream := fbLensSetDownstreamMock,
    FocalLength := fbResult
);

AssertNoError(iFallible := fbCalcFocalLength2LensSets);

AssertNoErrorExpectedQuantityLREAL(
    iExpected := fbExpected,
    iActual := fbResult,
    fDelta := ABS(0.001 * fbExpected.Val)
);

TEST_FINISHED();

TEST('TestValidInputsExpectNoErrorCorrectFocalLength_4');

// Test Fixture

fbLensSetDownstreamMock.SetValid();
fbLensSetUpstreamMock.SetValid();

fbDeltaMock.Val := 4.968670828373695e-06;
fbCalcXRayDeltaMock.SetResult(Result := fbDeltaMock);

fbLensSetDownstreamMock.NumLenses := 1;

fbLensSetDownstreamMock.SetMultiplierOf(LensNum := 1, Multiplier := 1);
fbRadius.Val := 0.02963679928393626;
fbLensSetDownstreamMock.SetRadiusOf(LensNum := 1, Radius := fbRadius);
fbLensSetDownstreamMock.SetMaterialNameOf(LensNum := 1, MaterialFormula := 'Be');

fbLensSetUpstreamMock.NumLenses := 1;

fbLensSetUpstreamMock.SetMultiplierOf(LensNum := 1, Multiplier := 3);
fbRadius.Val := 0.027402942601658202;
fbLensSetUpstreamMock.SetRadiusOf(LensNum := 1, Radius := fbRadius);
fbLensSetUpstreamMock.SetMaterialNameOf(LensNum := 1, MaterialFormula := 'Be');

// prefocal_length := -608.9421066082488;
// virt_source := 663.5603816010208;
fbExpected.Val := -853.4478810035183;
fbExpected.Units := 'm';

fbSourceDistanceMock.Val := 420.90448501720135;
fbSourceDistanceMock.Units := 'm';
fbDistanceBetweenMock.Val := 54.61827499277206;
fbDistanceBetweenMock.Units := 'm';

fbCalcFocalLength2LensSets.Calculate(
    SourceDistance := fbSourceDistanceMock,
    DistanceBetween := fbDistanceBetweenMock,
    LensSetUpstream := fbLensSetUpstreamMock,
    LensSetDownstream := fbLensSetDownstreamMock,
    FocalLength := fbResult
);

AssertNoError(iFallible := fbCalcFocalLength2LensSets);

AssertNoErrorExpectedQuantityLREAL(
    iExpected := fbExpected,
    iActual := fbResult,
    fDelta := ABS(0.001 * fbExpected.Val)
);

TEST_FINISHED();

TEST('TestValidInputsExpectNoErrorCorrectFocalLength_5');

// Test Fixture

fbLensSetDownstreamMock.SetValid();
fbLensSetUpstreamMock.SetValid();

fbDeltaMock.Val := 2.482642806223779e-06;
fbCalcXRayDeltaMock.SetResult(Result := fbDeltaMock);

fbLensSetDownstreamMock.NumLenses := 1;

fbLensSetDownstreamMock.SetMultiplierOf(LensNum := 1, Multiplier := 4);
fbRadius.Val := 0.0437536972680983;
fbLensSetDownstreamMock.SetRadiusOf(LensNum := 1, Radius := fbRadius);
fbLensSetDownstreamMock.SetMaterialNameOf(LensNum := 1, MaterialFormula := 'Be');

fbLensSetUpstreamMock.NumLenses := 3;

fbLensSetUpstreamMock.SetMultiplierOf(LensNum := 1, Multiplier := 3);
fbRadius.Val := 0.00041860827086321397;
fbLensSetUpstreamMock.SetRadiusOf(LensNum := 1, Radius := fbRadius);
fbLensSetUpstreamMock.SetMaterialNameOf(LensNum := 1, MaterialFormula := 'Be');

fbLensSetUpstreamMock.SetMultiplierOf(LensNum := 2, Multiplier := 3);
fbRadius.Val := 0.029575836381313236;
fbLensSetUpstreamMock.SetRadiusOf(LensNum := 2, Radius := fbRadius);
fbLensSetUpstreamMock.SetMaterialNameOf(LensNum := 2, MaterialFormula := 'Be');

fbLensSetUpstreamMock.SetMultiplierOf(LensNum := 3, Multiplier := 1);
fbRadius.Val := 0.01939597498604634;
fbLensSetUpstreamMock.SetRadiusOf(LensNum := 3, Radius := fbRadius);
fbLensSetUpstreamMock.SetMaterialNameOf(LensNum := 3, MaterialFormula := 'Be');

// prefocal_length := 29.97729184721761;
// virt_source := 2.2567332163484544;
fbExpected.Val := -2.259047385129987;
fbExpected.Units := 'm';

fbSourceDistanceMock.Val := 367.2086572639015;
fbSourceDistanceMock.Units := 'm';
fbDistanceBetweenMock.Val := 32.234025063566065;
fbDistanceBetweenMock.Units := 'm';

fbCalcFocalLength2LensSets.Calculate(
    SourceDistance := fbSourceDistanceMock,
    DistanceBetween := fbDistanceBetweenMock,
    LensSetUpstream := fbLensSetUpstreamMock,
    LensSetDownstream := fbLensSetDownstreamMock,
    FocalLength := fbResult
);

AssertNoError(iFallible := fbCalcFocalLength2LensSets);

AssertNoErrorExpectedQuantityLREAL(
    iExpected := fbExpected,
    iActual := fbResult,
    fDelta := ABS(0.001 * fbExpected.Val)
);

TEST_FINISHED();

TEST('TestValidInputsExpectNoErrorCorrectFocalLength_6');

// Test Fixture

fbLensSetDownstreamMock.SetValid();
fbLensSetUpstreamMock.SetValid();

fbDeltaMock.Val := 4.809806426001835e-06;
fbCalcXRayDeltaMock.SetResult(Result := fbDeltaMock);

fbLensSetDownstreamMock.NumLenses := 1;

fbLensSetDownstreamMock.SetMultiplierOf(LensNum := 1, Multiplier := 3);
fbRadius.Val := 0.014491348218047295;
fbLensSetDownstreamMock.SetRadiusOf(LensNum := 1, Radius := fbRadius);
fbLensSetDownstreamMock.SetMaterialNameOf(LensNum := 1, MaterialFormula := 'Be');

fbLensSetUpstreamMock.NumLenses := 4;

fbLensSetUpstreamMock.SetMultiplierOf(LensNum := 1, Multiplier := 2);
fbRadius.Val := 0.005146164516140333;
fbLensSetUpstreamMock.SetRadiusOf(LensNum := 1, Radius := fbRadius);
fbLensSetUpstreamMock.SetMaterialNameOf(LensNum := 1, MaterialFormula := 'Be');

fbLensSetUpstreamMock.SetMultiplierOf(LensNum := 2, Multiplier := 3);
fbRadius.Val := 0.030929221212654165;
fbLensSetUpstreamMock.SetRadiusOf(LensNum := 2, Radius := fbRadius);
fbLensSetUpstreamMock.SetMaterialNameOf(LensNum := 2, MaterialFormula := 'Be');

fbLensSetUpstreamMock.SetMultiplierOf(LensNum := 3, Multiplier := 1);
fbRadius.Val := 0.013234882583181885;
fbLensSetUpstreamMock.SetRadiusOf(LensNum := 3, Radius := fbRadius);
fbLensSetUpstreamMock.SetMaterialNameOf(LensNum := 3, MaterialFormula := 'Be');

fbLensSetUpstreamMock.SetMultiplierOf(LensNum := 4, Multiplier := 3);
fbRadius.Val := 0.02460642490201623;
fbLensSetUpstreamMock.SetRadiusOf(LensNum := 4, Radius := fbRadius);
fbLensSetUpstreamMock.SetMaterialNameOf(LensNum := 4, MaterialFormula := 'Be');

// prefocal_length := 187.43761503590378;
// virt_source := -113.83851116169586;
fbExpected.Val := 92.80030656459189;
fbExpected.Units := 'm';

fbSourceDistanceMock.Val := 882.5535918413274;
fbSourceDistanceMock.Units := 'm';
fbDistanceBetweenMock.Val := 73.59910387420791;
fbDistanceBetweenMock.Units := 'm';

fbCalcFocalLength2LensSets.Calculate(
    SourceDistance := fbSourceDistanceMock,
    DistanceBetween := fbDistanceBetweenMock,
    LensSetUpstream := fbLensSetUpstreamMock,
    LensSetDownstream := fbLensSetDownstreamMock,
    FocalLength := fbResult
);

AssertNoError(iFallible := fbCalcFocalLength2LensSets);

AssertNoErrorExpectedQuantityLREAL(
    iExpected := fbExpected,
    iActual := fbResult,
    fDelta := ABS(0.001 * fbExpected.Val)
);

TEST_FINISHED();

TEST('TestValidInputsExpectNoErrorCorrectFocalLength_7');

// Test Fixture

fbLensSetDownstreamMock.SetValid();
fbLensSetUpstreamMock.SetValid();

fbDeltaMock.Val := 2.893481467982467e-06;
fbCalcXRayDeltaMock.SetResult(Result := fbDeltaMock);

fbLensSetDownstreamMock.NumLenses := 4;

fbLensSetDownstreamMock.SetMultiplierOf(LensNum := 1, Multiplier := 3);
fbRadius.Val := 0.025032968509718964;
fbLensSetDownstreamMock.SetRadiusOf(LensNum := 1, Radius := fbRadius);
fbLensSetDownstreamMock.SetMaterialNameOf(LensNum := 1, MaterialFormula := 'Be');

fbLensSetDownstreamMock.SetMultiplierOf(LensNum := 2, Multiplier := 2);
fbRadius.Val := 0.021752797758486635;
fbLensSetDownstreamMock.SetRadiusOf(LensNum := 2, Radius := fbRadius);
fbLensSetDownstreamMock.SetMaterialNameOf(LensNum := 2, MaterialFormula := 'Be');

fbLensSetDownstreamMock.SetMultiplierOf(LensNum := 3, Multiplier := 1);
fbRadius.Val := 0.026707084615146103;
fbLensSetDownstreamMock.SetRadiusOf(LensNum := 3, Radius := fbRadius);
fbLensSetDownstreamMock.SetMaterialNameOf(LensNum := 3, MaterialFormula := 'Be');

fbLensSetDownstreamMock.SetMultiplierOf(LensNum := 4, Multiplier := 2);
fbRadius.Val := 0.011163337756572035;
fbLensSetDownstreamMock.SetRadiusOf(LensNum := 4, Radius := fbRadius);
fbLensSetDownstreamMock.SetMaterialNameOf(LensNum := 4, MaterialFormula := 'Be');

fbLensSetUpstreamMock.NumLenses := 3;

fbLensSetUpstreamMock.SetMultiplierOf(LensNum := 1, Multiplier := 3);
fbRadius.Val := 0.03831600333368111;
fbLensSetUpstreamMock.SetRadiusOf(LensNum := 1, Radius := fbRadius);
fbLensSetUpstreamMock.SetMaterialNameOf(LensNum := 1, MaterialFormula := 'Be');

fbLensSetUpstreamMock.SetMultiplierOf(LensNum := 2, Multiplier := 2);
fbRadius.Val := 0.009616391760655846;
fbLensSetUpstreamMock.SetRadiusOf(LensNum := 2, Radius := fbRadius);
fbLensSetUpstreamMock.SetMaterialNameOf(LensNum := 2, MaterialFormula := 'Be');

fbLensSetUpstreamMock.SetMultiplierOf(LensNum := 3, Multiplier := 3);
fbRadius.Val := 0.0311161030356074;
fbLensSetUpstreamMock.SetRadiusOf(LensNum := 3, Radius := fbRadius);
fbLensSetUpstreamMock.SetMaterialNameOf(LensNum := 3, MaterialFormula := 'Be');

// prefocal_length := -1537.7953351978924;
// virt_source := 1564.2027690438058;
fbExpected.Val := 543.5531487689012;
fbExpected.Units := 'm';

fbSourceDistanceMock.Val := 375.4621381756753;
fbSourceDistanceMock.Units := 'm';
fbDistanceBetweenMock.Val := 26.40743384591335;
fbDistanceBetweenMock.Units := 'm';

fbCalcFocalLength2LensSets.Calculate(
    SourceDistance := fbSourceDistanceMock,
    DistanceBetween := fbDistanceBetweenMock,
    LensSetUpstream := fbLensSetUpstreamMock,
    LensSetDownstream := fbLensSetDownstreamMock,
    FocalLength := fbResult
);

AssertNoError(iFallible := fbCalcFocalLength2LensSets);

AssertNoErrorExpectedQuantityLREAL(
    iExpected := fbExpected,
    iActual := fbResult,
    fDelta := ABS(0.001 * fbExpected.Val)
);

TEST_FINISHED();

TEST('TestValidInputsExpectNoErrorCorrectFocalLength_8');

// Test Fixture

fbLensSetDownstreamMock.SetValid();
fbLensSetUpstreamMock.SetValid();

fbDeltaMock.Val := 1.785963601723448e-05;
fbCalcXRayDeltaMock.SetResult(Result := fbDeltaMock);

fbLensSetDownstreamMock.NumLenses := 5;

fbLensSetDownstreamMock.SetMultiplierOf(LensNum := 1, Multiplier := 2);
fbRadius.Val := 0.043628954323921505;
fbLensSetDownstreamMock.SetRadiusOf(LensNum := 1, Radius := fbRadius);
fbLensSetDownstreamMock.SetMaterialNameOf(LensNum := 1, MaterialFormula := 'Be');

fbLensSetDownstreamMock.SetMultiplierOf(LensNum := 2, Multiplier := 2);
fbRadius.Val := 0.036605506416269806;
fbLensSetDownstreamMock.SetRadiusOf(LensNum := 2, Radius := fbRadius);
fbLensSetDownstreamMock.SetMaterialNameOf(LensNum := 2, MaterialFormula := 'Be');

fbLensSetDownstreamMock.SetMultiplierOf(LensNum := 3, Multiplier := 3);
fbRadius.Val := 0.04260927212580594;
fbLensSetDownstreamMock.SetRadiusOf(LensNum := 3, Radius := fbRadius);
fbLensSetDownstreamMock.SetMaterialNameOf(LensNum := 3, MaterialFormula := 'Be');

fbLensSetDownstreamMock.SetMultiplierOf(LensNum := 4, Multiplier := 4);
fbRadius.Val := 0.026067948893701932;
fbLensSetDownstreamMock.SetRadiusOf(LensNum := 4, Radius := fbRadius);
fbLensSetDownstreamMock.SetMaterialNameOf(LensNum := 4, MaterialFormula := 'Be');

fbLensSetDownstreamMock.SetMultiplierOf(LensNum := 5, Multiplier := 4);
fbRadius.Val := 0.03441156864701482;
fbLensSetDownstreamMock.SetRadiusOf(LensNum := 5, Radius := fbRadius);
fbLensSetDownstreamMock.SetMaterialNameOf(LensNum := 5, MaterialFormula := 'Be');

fbLensSetUpstreamMock.NumLenses := 1;

fbLensSetUpstreamMock.SetMultiplierOf(LensNum := 1, Multiplier := 3);
fbRadius.Val := 0.017717318245260513;
fbLensSetUpstreamMock.SetRadiusOf(LensNum := 1, Radius := fbRadius);
fbLensSetUpstreamMock.SetMaterialNameOf(LensNum := 1, MaterialFormula := 'Be');

// prefocal_length := 215.63058625934383;
// virt_source := -188.91807079674132;
fbExpected.Val := 47.550799296177914;
fbExpected.Units := 'm';

fbSourceDistanceMock.Val := 735.613045055365;
fbSourceDistanceMock.Units := 'm';
fbDistanceBetweenMock.Val := 26.71251546260251;
fbDistanceBetweenMock.Units := 'm';

fbCalcFocalLength2LensSets.Calculate(
    SourceDistance := fbSourceDistanceMock,
    DistanceBetween := fbDistanceBetweenMock,
    LensSetUpstream := fbLensSetUpstreamMock,
    LensSetDownstream := fbLensSetDownstreamMock,
    FocalLength := fbResult
);

AssertNoError(iFallible := fbCalcFocalLength2LensSets);

AssertNoErrorExpectedQuantityLREAL(
    iExpected := fbExpected,
    iActual := fbResult,
    fDelta := ABS(0.001 * fbExpected.Val)
);

TEST_FINISHED();

TEST('TestValidInputsExpectNoErrorCorrectFocalLength_9');

// Test Fixture

fbLensSetDownstreamMock.SetValid();
fbLensSetUpstreamMock.SetValid();

fbDeltaMock.Val := 2.162566248628579e-06;
fbCalcXRayDeltaMock.SetResult(Result := fbDeltaMock);

fbLensSetDownstreamMock.NumLenses := 1;

fbLensSetDownstreamMock.SetMultiplierOf(LensNum := 1, Multiplier := 4);
fbRadius.Val := 0.04222215607210737;
fbLensSetDownstreamMock.SetRadiusOf(LensNum := 1, Radius := fbRadius);
fbLensSetDownstreamMock.SetMaterialNameOf(LensNum := 1, MaterialFormula := 'Be');

fbLensSetUpstreamMock.NumLenses := 2;

fbLensSetUpstreamMock.SetMultiplierOf(LensNum := 1, Multiplier := 1);
fbRadius.Val := 0.03951867536117315;
fbLensSetUpstreamMock.SetRadiusOf(LensNum := 1, Radius := fbRadius);
fbLensSetUpstreamMock.SetMaterialNameOf(LensNum := 1, MaterialFormula := 'Be');

fbLensSetUpstreamMock.SetMultiplierOf(LensNum := 2, Multiplier := 1);
fbRadius.Val := 0.03957244705747632;
fbLensSetUpstreamMock.SetRadiusOf(LensNum := 2, Radius := fbRadius);
fbLensSetUpstreamMock.SetMaterialNameOf(LensNum := 2, MaterialFormula := 'Be');

// prefocal_length := -345.573817639163;
// virt_source := 385.5930623401319;
fbExpected.Val := -457.94724915203506;
fbExpected.Units := 'm';

fbSourceDistanceMock.Val := 361.3064920899833;
fbSourceDistanceMock.Units := 'm';
fbDistanceBetweenMock.Val := 40.0192447009689;
fbDistanceBetweenMock.Units := 'm';

fbCalcFocalLength2LensSets.Calculate(
    SourceDistance := fbSourceDistanceMock,
    DistanceBetween := fbDistanceBetweenMock,
    LensSetUpstream := fbLensSetUpstreamMock,
    LensSetDownstream := fbLensSetDownstreamMock,
    FocalLength := fbResult
);

AssertNoError(iFallible := fbCalcFocalLength2LensSets);

AssertNoErrorExpectedQuantityLREAL(
    iExpected := fbExpected,
    iActual := fbResult,
    fDelta := ABS(0.001 * fbExpected.Val)
);

TEST_FINISHED();
]]></ST>
      </Implementation>
    </Method>
    <Method Name="TestInvalidCalcFocalLengthExpectError0FocalLength" Id="{a5181570-3139-498e-a11b-a5a831ca649e}">
      <Declaration><![CDATA[
METHOD PRIVATE TestInvalidCalcFocalLengthExpectError0FocalLength
VAR
    fbLensSetUpstreamMock : FB_LensSetMock;
    fbLensSetDownstreamMock : FB_LensSetMock;
    fbCalcFocalLengthLensSetMock : FB_CalcFocalLengthLensSetMock();
    fbLensSetCompounderMock : FB_LensSetCompounderMock();
    fbConvertUnitsLREALMock : FB_ConvertUnitsLREALMock;
    // Subject under test
    fbCalcFocalLength2LensSets : FB_CalcFocalLength2LensSets(
        iConvertUnits := fbConvertUnitsLREALMock,
        iCalcFocalLengthLensSet := fbCalcFocalLengthLensSetMock,
        iLensSetCompounder := fbLensSetCompounderMock
    );
    fbSourceDistanceMock : FB_QuantityLREALPublicMock;
    fbDistanceBetweenMock : FB_QuantityLREALPublicMock;
    fbExpected : FB_QuantityLREALPublicMock;
    fbResult : FB_QuantityLREALPublic(Units := '1');
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
TEST('TestInvalidCalcFocalLengthExpectError0FocalLength');

// Test fixture
fbExpected.Val := 0.0;
fbExpected.Units := 'm';

fbLensSetUpstreamMock.SetValid();
fbLensSetDownstreamMock.SetValid();
fbCalcFocalLengthLensSetMock.SetError(Msg := 'Error');
fbLensSetCompounderMock.SetValid();

fbSourceDistanceMock.Val := 1.0;
fbSourceDistanceMock.Units := 'm';
fbDistanceBetweenMock.Val := 40.0;
fbDistanceBetweenMock.Units := 'm';

// Subject Under Test
fbCalcFocalLength2LensSets.Calculate(
    SourceDistance := fbSourceDistanceMock,
    DistanceBetween := fbDistanceBetweenMock,
    LensSetUpstream := fbLensSetUpstreamMock,
    LensSetDownstream := fbLensSetDownstreamMock,
    FocalLength := fbResult
);

AssertError(iFallible := fbCalcFocalLength2LensSets);

AssertErrorExactExpectedQuantityLREAL(
    iExpected := fbExpected,
    iActual := fbResult
);

TEST_FINISHED();
]]></ST>
      </Implementation>
    </Method>
    <Method Name="TestInvalidLensSetCompounderExpectError0FocalLength" Id="{9a49607c-94d1-4854-8627-98384369e4ee}">
      <Declaration><![CDATA[
METHOD PRIVATE TestInvalidLensSetCompounderExpectError0FocalLength
VAR
    fbLensSetUpstreamMock : FB_LensSetMock;
    fbLensSetDownstreamMock : FB_LensSetMock;
    fbCalcFocalLengthLensSetMock : FB_CalcFocalLengthLensSetMock();
    fbLensSetCompounderMock : FB_LensSetCompounderMock();
    fbConvertUnitsLREALMock : FB_ConvertUnitsLREALMock;
    // Subject under test
    fbCalcFocalLength2LensSets : FB_CalcFocalLength2LensSets(
        iConvertUnits := fbConvertUnitsLREALMock,
        iCalcFocalLengthLensSet := fbCalcFocalLengthLensSetMock,
        iLensSetCompounder := fbLensSetCompounderMock
    );
    fbSourceDistanceMock : FB_QuantityLREALPublicMock;
    fbDistanceBetweenMock : FB_QuantityLREALPublicMock;
    fbExpected : FB_QuantityLREALPublicMock;
    fbResult : FB_QuantityLREALPublic(Units := '1');
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
TEST('TestInvalidLensSetCompounderExpectError0FocalLength');

// Test fixture
fbExpected.Val := 0.0;
fbExpected.Units := 'm';

fbLensSetUpstreamMock.SetValid();
fbLensSetDownstreamMock.SetValid();
fbCalcFocalLengthLensSetMock.SetValid();
fbLensSetCompounderMock.SetError(Msg := 'Error');

fbSourceDistanceMock.Val := 1.0;
fbSourceDistanceMock.Units := 'm';
fbDistanceBetweenMock.Val := 40.0;
fbDistanceBetweenMock.Units := 'm';

// Subject Under Test
fbCalcFocalLength2LensSets.Calculate(
    SourceDistance := fbSourceDistanceMock,
    DistanceBetween := fbDistanceBetweenMock,
    LensSetUpstream := fbLensSetUpstreamMock,
    LensSetDownstream := fbLensSetDownstreamMock,
    FocalLength := fbResult
);

AssertError(iFallible := fbCalcFocalLength2LensSets);

AssertErrorExactExpectedQuantityLREAL(
    iExpected := fbExpected,
    iActual := fbResult
);

TEST_FINISHED();
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>