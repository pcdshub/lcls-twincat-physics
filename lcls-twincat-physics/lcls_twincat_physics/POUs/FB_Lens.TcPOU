<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_Lens" Id="{957df398-fc17-4d3d-8259-efbd2826ce0a}" SpecialFunc="None">
    <Declaration><![CDATA[
FUNCTION_BLOCK FB_Lens EXTENDS FB_Fallible IMPLEMENTS I_Lens
VAR
    sMaterialName : T_MaxString;
    nMultiplier : INT;
    fRadius : LREAL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Property Name="MaterialName" Id="{b2fab391-7651-45c1-ab26-07c187736073}">
      <Declaration><![CDATA[
PROPERTY MaterialName : T_MaxString
]]></Declaration>
      <Get Name="Get" Id="{e00aa37c-ca86-4eca-9fcd-e966cf75e9b6}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[
MaterialName := sMaterialName;
]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{55ffced3-a939-497c-94f4-6d70d9a46315}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[
sMaterialName := MaterialName;
]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="Multiplier" Id="{200a7dfc-f3f3-4666-adbd-e1ca5ac12dd0}">
      <Declaration><![CDATA[
PROPERTY Multiplier : INT
]]></Declaration>
      <Get Name="Get" Id="{b3d82859-9ccf-4e6f-8b3d-7bb3d15ef54d}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[
Multiplier := nMultiplier;
]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{6dc3a0c5-5cdb-435a-8688-d597fbad8625}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[
ClearError();

IF Multiplier <= 0 THEN
    SetError(sMsg := NonPositiveMultiplierErrorMsg(
        nMultiplier := Multiplier
    ));
    RETURN;
END_IF

nMultiplier := Multiplier;
]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="NonPositiveMultiplierErrorMsg" Id="{36a5c803-9bc8-4d9b-91e4-bff88830b366}">
      <Declaration><![CDATA[
METHOD NonPositiveMultiplierErrorMsg : T_MaxString
VAR_INPUT
    nMultiplier : INT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
NonPositiveMultiplierErrorMsg :=
        CONCAT('Attempted to set muliplier to a non-positive value of: [',
        CONCAT(INT_TO_STRING(nMultiplier),
        ']'));]]></ST>
      </Implementation>
    </Method>
    <Method Name="NonPositiveRadiusErrorMsg" Id="{95415334-fe57-431a-962c-0f4016f5c927}">
      <Declaration><![CDATA[
METHOD NonPositiveRadiusErrorMsg : T_MaxString
VAR_INPUT
    fRadius: LREAL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
NonPositiveRadiusErrorMsg :=
        CONCAT('Attempted to set radius to a non-positive value of: [',
        CONCAT(LREAL_TO_STRING(fRadius),
        ']'));]]></ST>
      </Implementation>
    </Method>
    <Property Name="Radius" Id="{0617bfac-f0fd-416a-befd-52b48fa64543}">
      <Declaration><![CDATA[
PROPERTY Radius : LREAL
]]></Declaration>
      <Get Name="Get" Id="{9baf7bf1-32bb-420a-a131-378ccfcb36a6}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[
Radius := fRadius;
]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{1953f21a-7c83-4957-b12a-8eaedb0f3929}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[
ClearError();

IF Radius <= 0 THEN
    SetError(sMsg := NonPositiveRadiusErrorMsg(
        fRadius := Radius
    ));
    RETURN;
END_IF

fRadius := Radius;
]]></ST>
        </Implementation>
      </Set>
    </Property>
  </POU>
</TcPlcObject>